credentials:
  system:
    domainCredentials:
    - credentials:
      - string:
          description: "kubernetes-jenkins-serviceaccount-token"
          id: "kubernetes-jenkins-serviceaccount-token"
          scope: GLOBAL
          secret: eyJhbGciOiJSUzI1NiIsImtpZCI6IjF2YVdlX0Z1ZE5FY1RKOVMtRHQydFhlWlNYR3o4RzZKcGQwZDBkNXFzNXMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJqZW5raW5zIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtdG9rZW4tcXh0ZHMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiamVua2lucyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImQ1N2E0OWE3LTcyMzAtNDgzOC05NTRjLTdjZDI5OGRiNjQ0ZiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpqZW5raW5zOmplbmtpbnMifQ.py9t2rYKOhPzELl4-qEpoyGHxADGbGYC5bGJ0jbr6LRESBON0lHKEl3MAGKdSpLEfGW3AnK8qgVWdb1_rh_ezhKJuEPGDmYFzWjryNOD49PuD2z4bSrfT11QHCSyb4aTXqYZxD-lbktWXG9jQ-EatAxBfUvUbYwejDBFgyzY9xCHEzpnsEcrHu8Ald_70hAlcwACPsCt5DizX1_qB8jHVq3AhEoLGZnq3InLI0bjEmW-0ANBnZk7AwNa-qHlAWBdhyZKTqT53ksIDWG7GLoPSbtyo51eZ9U5w2O0O5LpjHLeSYar1RQmmUfTEpBtmHQ5FwVolOEDAGwdyASQzDn0NA
jenkins:
  systemMessage: "Welcome to GGS's Youtube Channel - Jenkins Video"
  numExecutors: 0
  securityRealm:
    local:
      allowsSignup: false
      users:
       - id: admin
         password: admin
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Overall/Read:anonymous"
        - "Job/Read:anonymous"
        - "View/Read:anonymous"
        - "Overall/Administer:authenticated"
  crumbIssuer: standard
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      credentialsId: "kubernetes-jenkins-serviceaccount-token"
      jenkinsUrl: "http://host.minikube.internal:8080"
      name: "kubernetes"
      namespace: "jenkins"
      serverUrl: "https://host.docker.internal:49564"
      skipTlsVerify: true
security:
  globalJobDslSecurityConfiguration:
    useScriptSecurity: false
unclassified:
  globalLibraries:
    libraries:
      - defaultVersion: "main"
        implicit: true
        name: "shared-lib"
        retriever:
          legacySCM:
            scm:
              filesystem:
                clearWorkspace: false
                copyHidden: false
                path: "/tmp/shared-lib"
jobs:
  - script: >
      pipelineJob('test') {
          definition {
            cps {
              sandbox(true)
              script("hello()")
            }
          }
      }
  - script: >
      pipelineJob('configserver') {
        parameters {
          stringParam('appBranch', 'main', 'Application Branch name')
        }
        definition {
          cps {
            sandbox(true)
            script("cicd()")
          }
        }
      }
  - script: >
      pipelineJob('seed') {
        parameters {
          stringParam('pattern', '', 'Example: projectA or projectB/appC')
        }
        definition {
          cps {
            sandbox(true)
            script("seed()")
          }
        }
      }